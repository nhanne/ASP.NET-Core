@model PaginatedList<netCoreMVC.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<a class="btn btn-danger" asp-action="Create">Create New</a>
<a asp-action="Index" class="btn btn-primary">Back to Full List</a>
<hr/>

<form asp-action="Index" method="get" class="row g-3">
    <div class="col-auto">
        <label for="SearchString" class="visually-hidden">Password</label>
        <input type="text" name="SearchString" class="form-control" id="SearchString" placeholder="Search..." value="@ViewData["CurrentFilter"]">
    </div>
    <div class="col-auto">
        <button type="submit" value="Search" class="btn btn-light">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form>
<hr/>
<table class="table">
    <thead>
        <tr class="table-active">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                    <a class="btn btn-info"  asp-action="Details" asp-route-id="@item.ID">Details</a> 
                    <a class ="btn btn-dark" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-warning @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-success @nextDisabled">
    Next
</a>